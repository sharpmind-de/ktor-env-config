plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.6.21'
    id 'java-library'
    id 'maven-publish'
    id 'signing'
    id 'net.researchgate.release' version '2.8.1'
}

group = 'de.sharpmind.ktor'

repositories {
    mavenCentral()
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "io.ktor:ktor-server-core:$ktor_version"
    testImplementation "io.ktor:ktor-server-tests:$ktor_version"
    testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar

            pom {
                name = 'Ktor Environment Config'
                description = 'Environment aware configuration for Ktor'
                url = 'https://github.com/sharpmind-de/ktor-env-config'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'stolzem'
                        name = 'Marco Stolze'
                        email = 'marco@sharpmind.de'
                    }
                }
                scm {
                    connection = 'scm:git:https://github.com/sharpmind-de/ktor-env-config.git'
                    developerConnection = 'scm:git:https://github.com/sharpmind-de/ktor-env-config.git'
                    url = 'https://github.com/sharpmind-de/ktor-env-config'
                }
            }
        }
    }

    repositories {
        maven {
            name = "OSSRH"
            url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            credentials {
                username = project.findProperty('OSSRH_USERNAME') ?: System.getenv("OSSRH_USERNAME")
                password = project.findProperty('OSSRH_PASSWORD') ?: System.getenv("OSSRH_PASSWORD")
            }
        }
    }
}

signing {
    if (project.hasProperty('signing.keyId') &&
            project.hasProperty('signing.password') &&
            project.hasProperty('signing.secretKeyRingFile')) {
        sign publishing.publications.mavenJava
    }
}
